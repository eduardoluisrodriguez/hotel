# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: notnoopci/php:7.1-apache-node

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/mysql:5.7
        environment:
          - MYSQL_USER=root
          - MYSQL_PASSWORD=
          - MYSQL_ALLOW_EMPTY_PASSWORD=true
          - MYSQL_DATABASE=homestead_test

    working_directory: ~/repo

    steps:
      # MySQL
      #- run: sudo apt-get update
      #- run: sudo apt-get install mysql-server
      - run: sudo docker-php-ext-install pdo_mysql
      #- run: sudo service mysql start
      # Composer
      - run: php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
      - run: php -r "if (hash_file('SHA384', 'composer-setup.php') === '669656bab3166a7aff8a7506b8cb2d1c292f042046c5a994c43155c0be6190fa0355160742ab2e1c88d40d5be660b410') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
      - run: php composer-setup.php
      - run: php -r "unlink('composer-setup.php');"
      - run: php composer.phar self-update
      - run: sudo mv composer.phar /usr/local/bin/composer

      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "composer.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Display versions
          command: |
            php -v
            composer --version

      - run: sudo chmod -R 775 storage
      - run: sudo chmod -R 775 bootstrap/cache
      - run: cp .env.travis .env
      #- run: mysql -u root -e 'create database homestead_test;'
      - run: composer update --no-interaction
      - run: php artisan key:generate

      - run: php artisan migrate --env=testing --no-interaction -vvv
      - run: php artisan db:seed --env=testing --no-interaction -vvv

      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "composer.json" }}

      # run tests!
      - run: vendor/bin/phpunit

      - run: php artisan migrate:rollback --env=testing --no-interaction -vvv
